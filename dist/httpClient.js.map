{"version":3,"sources":["../src/httpClient.js"],"names":["HttpClient","config","instance","create","axiosConfig","url","params","get","catch","err","then","res","data"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAEaA,U,WAAAA,U;;;AAET,wBAAaC,MAAb,EAAsB;AAAA;;AAAA,4HACZA,MADY;;AAElB,cAAKC,QAAL,GAAgB,gBAAMC,MAAN,CAAa,MAAKC,WAAlB,CAAhB;AAFkB;AAGrB;;;;4BAEIC,G,EAAmB;AAAA,gBAAdC,MAAc,uEAAL,EAAK;;AACpB,mBAAO,KAAKJ,QAAL,CAAcK,GAAd,CAAmBF,GAAnB,EAAwBC,MAAxB,EACFE,KADE,CACI,UAACC,GAAD,EAAS;AACZ,uBAAOA,GAAP;AACH,aAHE,EAIFC,IAJE,CAIG,UAACC,GAAD,EAAS;AACX,uBAAOA,IAAIC,IAAX;AACH,aANE,CAAP;AAOH","file":"httpClient.js","sourcesContent":["import axios from 'axios';\r\nimport { AxiosBase } from './axiosBase';\r\n\r\nexport class HttpClient extends AxiosBase {\r\n\r\n    constructor( config ) {\r\n        super(config)\r\n        this.instance = axios.create(this.axiosConfig);\r\n    }\r\n\r\n    get( url, params = {} ) {\r\n        return this.instance.get( url, params )\r\n            .catch((err) => {\r\n                return err\r\n            })\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    }\r\n\r\n}"]}